{"ast":null,"code":"var _jsxFileName = \"/home/caio/Documentos/trybe/github-repositorios/minimalistic-web-store/src/components/CurrencySwitcher.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { currencySwitcherAction } from \"../redux/actions\";\nimport { client } from \"..\";\nimport { CURRENCIES_QUERY } from \"../graphQL/queries\";\nimport currencyDropdownIcon from \"../images/currencyDropdownIcon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CurrencySwitcher extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currencies: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTrigger = this.handleTrigger.bind(this);\n  }\n\n  componentDidMount() {\n    client.query({\n      query: CURRENCIES_QUERY\n    }).then(result => this.setState({\n      currencies: result.data.currencies\n    }));\n  }\n\n  handleClick(_ref) {\n    let {\n      target: {\n        value,\n        innerText\n      }\n    } = _ref;\n    const {\n      currencySwitcherFunction\n    } = this.props;\n    const label = innerText.split(\" \")[0];\n    const objectToDispatch = {\n      currency: value,\n      label\n    };\n    currencySwitcherFunction(objectToDispatch);\n  }\n\n  handleTrigger() {\n    const {\n      handleCurrencySwitcherTrigger,\n      handleCartOverlayTrigger,\n      currencySwitcherIsOpen\n    } = this.props;\n    handleCurrencySwitcherTrigger(!currencySwitcherIsOpen);\n    handleCartOverlayTrigger(false);\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.state;\n    const {\n      label,\n      currencySwitcherIsOpen\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currency-switcher-header\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.handleTrigger(),\n          children: [label, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: currencyDropdownIcon,\n            alt: \"currency dropdown icon\",\n            className: `currency-switcher-icon${currencySwitcherIsOpen ? \"-open\" : \"-closed\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), currencySwitcherIsOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currency-switcher-body\",\n        children: currencies.map(_ref2 => {\n          let {\n            symbol,\n            label\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: this.handleClick,\n            value: label,\n            children: `${symbol} ${label}`\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  label: state.currentCurrency.label\n});\n\nconst mapDispatchToProps = dispatch => ({\n  currencySwitcherFunction: currency => dispatch(currencySwitcherAction(currency))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencySwitcher);","map":{"version":3,"sources":["/home/caio/Documentos/trybe/github-repositorios/minimalistic-web-store/src/components/CurrencySwitcher.jsx"],"names":["React","Component","connect","currencySwitcherAction","client","CURRENCIES_QUERY","currencyDropdownIcon","CurrencySwitcher","constructor","state","currencies","handleClick","bind","handleTrigger","componentDidMount","query","then","result","setState","data","target","value","innerText","currencySwitcherFunction","props","label","split","objectToDispatch","currency","handleCurrencySwitcherTrigger","handleCartOverlayTrigger","currencySwitcherIsOpen","render","map","symbol","mapStateToProps","currentCurrency","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { currencySwitcherAction } from \"../redux/actions\";\nimport { client } from \"..\";\nimport { CURRENCIES_QUERY } from \"../graphQL/queries\";\nimport currencyDropdownIcon from \"../images/currencyDropdownIcon.svg\";\n\nclass CurrencySwitcher extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currencies: [],\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTrigger = this.handleTrigger.bind(this);\n  }\n\n  componentDidMount() {\n    client\n      .query({\n        query: CURRENCIES_QUERY,\n      })\n      .then((result) => this.setState({ currencies: result.data.currencies }));\n  }\n\n  handleClick({ target: { value, innerText } }) {\n    const { currencySwitcherFunction } = this.props;\n    const label = innerText.split(\" \")[0];\n    const objectToDispatch = { currency: value, label };\n    currencySwitcherFunction(objectToDispatch);\n  }\n\n  handleTrigger() {\n    const {\n      handleCurrencySwitcherTrigger,\n      handleCartOverlayTrigger,\n      currencySwitcherIsOpen,\n    } = this.props;\n    handleCurrencySwitcherTrigger(!currencySwitcherIsOpen);\n    handleCartOverlayTrigger(false);\n  }\n\n  render() {\n    const { currencies } = this.state;\n    const { label, currencySwitcherIsOpen } = this.props;\n    return (\n      <>\n        <div className=\"currency-switcher-header\">\n          <button type=\"button\" onClick={() => this.handleTrigger()}>\n            {label}\n            <img\n              src={currencyDropdownIcon}\n              alt=\"currency dropdown icon\"\n              className={`currency-switcher-icon${\n                currencySwitcherIsOpen ? \"-open\" : \"-closed\"\n              }`}\n            />\n          </button>\n        </div>\n        {currencySwitcherIsOpen && (\n          <div className=\"currency-switcher-body\">\n            {currencies.map(({ symbol, label }) => {\n              return (\n                <button\n                  key={label}\n                  type=\"button\"\n                  onClick={this.handleClick}\n                  value={label}\n                >\n                  {`${symbol} ${label}`}\n                </button>\n              );\n            })}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  label: state.currentCurrency.label,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  currencySwitcherFunction: (currency) =>\n    dispatch(currencySwitcherAction(currency)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencySwitcher);\n"]},"metadata":{},"sourceType":"module"}