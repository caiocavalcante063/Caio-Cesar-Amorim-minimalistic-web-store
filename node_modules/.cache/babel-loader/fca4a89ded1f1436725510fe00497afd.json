{"ast":null,"code":"var _jsxFileName = \"/home/caio/Documentos/trybe/github-repositorios/minimalistic-web-store/src/components/Category.jsx\";\nimport React, { Component } from \"react\";\nimport { client } from \"..\";\nimport { PRODUCTS_QUERY } from \"../graphQL/queries\";\nimport ProductCard from \"./ProductCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Category extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    const path = window.location.pathname;\n    const selectedCategory = path === \"/\" ? \"all\" : path.split(\"/\")[1];\n    client.query({\n      query: PRODUCTS_QUERY,\n      variables: {\n        title: `${selectedCategory}`\n      }\n    }).then(result => this.setState({\n      products: result.data.category.products\n    }));\n  }\n\n  render() {\n    const {\n      products\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-container\",\n      children: products.map(_ref => {\n        let {\n          id,\n          name,\n          inStock,\n          gallery,\n          prices,\n          brand\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(ProductCard, {\n          id: id,\n          name: name,\n          inStock: inStock,\n          gallery: gallery,\n          prices: prices,\n          brand: brand\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/caio/Documentos/trybe/github-repositorios/minimalistic-web-store/src/components/Category.jsx"],"names":["React","Component","client","PRODUCTS_QUERY","ProductCard","Category","constructor","state","products","componentDidMount","path","window","location","pathname","selectedCategory","split","query","variables","title","then","result","setState","data","category","render","map","id","name","inStock","gallery","prices","brand"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,IAAvB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC9CK,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAA7B;AACA,UAAMC,gBAAgB,GAAGJ,IAAI,KAAK,GAAT,GAAe,KAAf,GAAuBA,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAhD;AAEAb,IAAAA,MAAM,CACHc,KADH,CACS;AACLA,MAAAA,KAAK,EAAEb,cADF;AAELc,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAG,GAAEJ,gBAAiB;AAA7B;AAFN,KADT,EAKGK,IALH,CAKSC,MAAD,IACJ,KAAKC,QAAL,CAAc;AAAEb,MAAAA,QAAQ,EAAEY,MAAM,CAACE,IAAP,CAAYC,QAAZ,CAAqBf;AAAjC,KAAd,CANJ;AAQD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACGC,QAAQ,CAACiB,GAAT,CAAa,QAAmD;AAAA,YAAlD;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,IAAN;AAAYC,UAAAA,OAAZ;AAAqBC,UAAAA,OAArB;AAA8BC,UAAAA,MAA9B;AAAsCC,UAAAA;AAAtC,SAAkD;AAC/D,4BACE,QAAC,WAAD;AAEE,UAAA,EAAE,EAAEL,EAFN;AAGE,UAAA,IAAI,EAAEC,IAHR;AAIE,UAAA,OAAO,EAAEC,OAJX;AAKE,UAAA,OAAO,EAAEC,OALX;AAME,UAAA,MAAM,EAAEC,MANV;AAOE,UAAA,KAAK,EAAEC;AAPT,WACOL,EADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAZA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAzC6C","sourcesContent":["import React, { Component } from \"react\";\nimport { client } from \"..\";\nimport { PRODUCTS_QUERY } from \"../graphQL/queries\";\nimport ProductCard from \"./ProductCard\";\n\nexport default class Category extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n    };\n  }\n\n  componentDidMount() {\n    const path = window.location.pathname;\n    const selectedCategory = path === \"/\" ? \"all\" : path.split(\"/\")[1];\n\n    client\n      .query({\n        query: PRODUCTS_QUERY,\n        variables: { title: `${selectedCategory}` },\n      })\n      .then((result) =>\n        this.setState({ products: result.data.category.products })\n      );\n  }\n\n  render() {\n    const { products } = this.state;\n    return (\n      <div className=\"category-container\">\n        {products.map(({ id, name, inStock, gallery, prices, brand }) => {\n          return (\n            <ProductCard\n              key={id}\n              id={id}\n              name={name}\n              inStock={inStock}\n              gallery={gallery}\n              prices={prices}\n              brand={brand}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}