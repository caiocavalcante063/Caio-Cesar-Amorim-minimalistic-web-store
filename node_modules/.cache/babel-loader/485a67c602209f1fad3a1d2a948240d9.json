{"ast":null,"code":"var _jsxFileName = \"/home/caio/Documentos/trybe/github-repositorios/minimalistic-web-store/src/components/ProductAttributes.jsx\";\nimport React, { Component } from \"react\";\nimport \"../styles/main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ProductAttributes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedAttributes: {}\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(attribute, value) {\n    const {\n      selectedAttributes,\n      handleCart\n    } = this.props;\n    this.setState({\n      selectedAttributes\n    });\n    handleCart({\n      [`${attribute.type} ${attribute.name}`]: value\n    });\n  }\n\n  render() {\n    const {\n      attributes,\n      selectedAttributes\n    } = this.props;\n    return attributes.map((attribute, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attributes-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"attribute-name\",\n          children: `${attribute.name.toUpperCase()}:`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), attribute.items.map(_ref => {\n          let {\n            value,\n            index\n          } = _ref;\n          const checkSwatch = attribute.type === \"swatch\" ? \"-swatch\" : \"\";\n          const selected = selectedAttributes && Object.entries(selectedAttributes).length > 0 && Object.entries(selectedAttributes).some(val => val[0] === `${attribute.type} ${attribute.name}` && val[1] === value) ? `selected${checkSwatch}` : `not-selected${checkSwatch}`;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            value: value,\n            style: {\n              background: attribute.type === \"swatch\" ? value : \"white\"\n            },\n            onClick: () => this.handleClick(attribute, value),\n            className: selected,\n            children: attribute.type === \"swatch\" ? \"\" : value\n          }, `${index}${value}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this);\n        })]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/caio/Documentos/trybe/github-repositorios/minimalistic-web-store/src/components/ProductAttributes.jsx"],"names":["React","Component","ProductAttributes","constructor","state","selectedAttributes","handleClick","bind","attribute","value","handleCart","props","setState","type","name","render","attributes","map","index","toUpperCase","items","checkSwatch","selected","Object","entries","length","some","val","background"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;;AAEA,eAAe,MAAMC,iBAAN,SAAgCD,SAAhC,CAA0C;AACvDE,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAE;AADT,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,SAAD,EAAYC,KAAZ,EAAmB;AAC5B,UAAM;AAAEJ,MAAAA,kBAAF;AAAsBK,MAAAA;AAAtB,QAAqC,KAAKC,KAAhD;AAEA,SAAKC,QAAL,CAAc;AAAEP,MAAAA;AAAF,KAAd;AACAK,IAAAA,UAAU,CAAC;AACT,OAAE,GAAEF,SAAS,CAACK,IAAK,IAAGL,SAAS,CAACM,IAAK,EAArC,GAAyCL;AADhC,KAAD,CAAV;AAGD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,UAAF;AAAcX,MAAAA;AAAd,QAAqC,KAAKM,KAAhD;AAEA,WAAOK,UAAU,CAACC,GAAX,CAAe,CAACT,SAAD,EAAYU,KAAZ,KAAsB;AAC1C,0BACE;AAAiB,QAAA,SAAS,EAAC,sBAA3B;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,oBAAiC,GAAEV,SAAS,CAACM,IAAV,CAAeK,WAAf,EAA6B;AAAhE;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGX,SAAS,CAACY,KAAV,CAAgBH,GAAhB,CAAoB,QAAsB;AAAA,cAArB;AAAER,YAAAA,KAAF;AAASS,YAAAA;AAAT,WAAqB;AACzC,gBAAMG,WAAW,GAAGb,SAAS,CAACK,IAAV,KAAmB,QAAnB,GAA8B,SAA9B,GAA0C,EAA9D;AACA,gBAAMS,QAAQ,GACZjB,kBAAkB,IAClBkB,MAAM,CAACC,OAAP,CAAenB,kBAAf,EAAmCoB,MAAnC,GAA4C,CAD5C,IAEAF,MAAM,CAACC,OAAP,CAAenB,kBAAf,EAAmCqB,IAAnC,CACGC,GAAD,IACEA,GAAG,CAAC,CAAD,CAAH,KAAY,GAAEnB,SAAS,CAACK,IAAK,IAAGL,SAAS,CAACM,IAAK,EAA/C,IACAa,GAAG,CAAC,CAAD,CAAH,KAAWlB,KAHf,CAFA,GAOK,WAAUY,WAAY,EAP3B,GAQK,eAAcA,WAAY,EATjC;AAWA,8BACE;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,KAAK,EAAEZ,KAHT;AAIE,YAAA,KAAK,EAAE;AACLmB,cAAAA,UAAU,EAAEpB,SAAS,CAACK,IAAV,KAAmB,QAAnB,GAA8BJ,KAA9B,GAAsC;AAD7C,aAJT;AAOE,YAAA,OAAO,EAAE,MAAM,KAAKH,WAAL,CAAiBE,SAAjB,EAA4BC,KAA5B,CAPjB;AAQE,YAAA,SAAS,EAAEa,QARb;AAAA,sBAUGd,SAAS,CAACK,IAAV,KAAmB,QAAnB,GAA8B,EAA9B,GAAmCJ;AAVtC,aACQ,GAAES,KAAM,GAAET,KAAM,EADxB;AAAA;AAAA;AAAA;AAAA,kBADF;AAcD,SA3BA,CAFH;AAAA,SAAUS,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAiCD,KAlCM,CAAP;AAmCD;;AA1DsD","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/main.css\";\n\nexport default class ProductAttributes extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      selectedAttributes: {},\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(attribute, value) {\n    const { selectedAttributes, handleCart } = this.props;\n\n    this.setState({ selectedAttributes });\n    handleCart({\n      [`${attribute.type} ${attribute.name}`]: value,\n    });\n  }\n\n  render() {\n    const { attributes, selectedAttributes } = this.props;\n\n    return attributes.map((attribute, index) => {\n      return (\n        <div key={index} className=\"attributes-container\">\n          <h2 className=\"attribute-name\">{`${attribute.name.toUpperCase()}:`}</h2>\n          {attribute.items.map(({ value, index }) => {\n            const checkSwatch = attribute.type === \"swatch\" ? \"-swatch\" : \"\";\n            const selected =\n              selectedAttributes &&\n              Object.entries(selectedAttributes).length > 0 &&\n              Object.entries(selectedAttributes).some(\n                (val) =>\n                  val[0] === `${attribute.type} ${attribute.name}` &&\n                  val[1] === value\n              )\n                ? `selected${checkSwatch}`\n                : `not-selected${checkSwatch}`;\n\n            return (\n              <button\n                key={`${index}${value}`}\n                type=\"button\"\n                value={value}\n                style={{\n                  background: attribute.type === \"swatch\" ? value : \"white\",\n                }}\n                onClick={() => this.handleClick(attribute, value)}\n                className={selected}\n              >\n                {attribute.type === \"swatch\" ? \"\" : value}\n              </button>\n            );\n          })}\n        </div>\n      );\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}